self.colorPaletteList=null,self.createColorPaletteList=function(e,t){if(null!=self.colorPaletteList)return;self.colorPaletteList=[];for(let t=0;t<e;t++)self.colorPaletteList[t]={},self.colorPaletteList[t].red=0,self.colorPaletteList[t].green=0,self.colorPaletteList[t].blue=0;const l=[],o=t.split(",");for(let e=0;e<o.length;e+=3){if(e+3>o.length)continue;const t=parseInt(o[e]),r=parseInt(o[e+1]),a=parseInt(o[e+2]),i={};i.red=t,i.green=r,i.blue=a,l.push(i)}const r=Math.floor(e/(l.length-1));let a=0,i=l[0];for(let t=1;t<l.length;t++){const o=l[t],s=(o.red-i.red)/r,n=(o.green-i.green)/r,f=(o.blue-i.blue)/r;let c=i.red,d=i.green,g=i.blue;for(let t=0;t<r&&(self.colorPaletteList[a].red=Math.floor(c),self.colorPaletteList[a].green=Math.floor(d),self.colorPaletteList[a].blue=Math.floor(g),a++,!(a>=e));t++)c+=s,d+=n,g+=f;if(a>=e)break;i=o}for(let t=a;t<e;t++)self.colorPaletteList[t].red=i.red,self.colorPaletteList[t].green=i.green,self.colorPaletteList[t].blue=i.blue},onmessage=function(e){const t=e.data;self.createColorPaletteList(t.colorRange,t.colorMap);const l=t.pixelHeight/t.pixelWidth*t.scaleWidth,o=t.scaleWidth/t.pixelWidth/t.antiAliasing,r=l/t.pixelHeight/t.antiAliasing,a=t.antiAliasing*t.antiAliasing;let i=0,s=0,n=0,f=0,c=0,d=0,g=0,h=0,u=0,b=0,P=0,L=0,p=0,m=0;for(let e=t.lineFrom;e<=t.lineTo;e++){const M=new ImageData(t.pixelWidth,1);s=t.scaleY+e/t.pixelHeight*l;for(let e=0;e<t.pixelWidth;e++){i=t.scaleX+e/t.pixelWidth*t.scaleWidth,L=0,p=0,m=0;for(let e=0;e<t.antiAliasing;e++){n=i+e*o;for(let e=0;e<t.antiAliasing;e++){for(f=s+e*r,c=0,d=0,g=0;!(g>=t.interval||(h=c*c,u=d*d,h+u>4));)b=h-u+n,d=2*c*d+f,c=b,g++;P=g%t.colorRange,L+=colorPaletteList[P].red,p+=colorPaletteList[P].green,m+=colorPaletteList[P].blue}}M.data[4*e]=Math.floor(L/a),M.data[4*e+1]=Math.floor(p/a),M.data[4*e+2]=Math.floor(m/a),M.data[4*e+3]=255}const x={done:!1};x.threadNumber=t.threadNumber,x.jobNumber=t.jobNumber,x.lineNumber=e,x.linePixelData=M,self.postMessage(x)}const M={done:!0};M.jobNumber=t.jobNumber,M.threadNumber=t.threadNumber,self.postMessage(M)};