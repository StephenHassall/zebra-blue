class zbDateTimeTools{static getDayOfYear(t,e,r){let a=0;for(let r=1;r<e;r++)a+=zbDateTimeTools.getDaysInMonth(t,r);return a+=r,a}static getDayOfWeek(t,e,r){let a=0;return e<3&&(a=1),((t-=a)+Math.floor(t/4)-Math.floor(t/100)+Math.floor(t/400)+[0,3,2,5,0,3,5,1,4,6,2,4][e-1]+r)%7}static getDaysInYear(t){return!0===zbDateTimeTools.isLeapYear(t)?366:365}static getDaysInMonth(t,e){return 2===e?!0===zbDateTimeTools.isLeapYear(t)?29:28:4===e||6===e||9===e||11===e?30:31}static isLeapYear(t){return t%4==0&&(t%100!=0||t%400==0)}static getDateToDays(t,e,r){let a=0;for(let r=1;r<e;r++)a+=zbDateTimeTools.getDaysInMonth(t,r);return a+=r,365*(t-1)+zbDateTimeTools._getLeapYearCount(t-1)+a}static getDaysToDate(t){let e=Math.floor((t-1)/365)+1,r=t;for(;;){r=t-(365*(e-1)+zbDateTimeTools._getLeapYearCount(e-1));let a=365;if(!0===zbDateTimeTools.isLeapYear(e)&&(a=366),r>a)e++;else{if(!(r<=0))break;e--}}let a=1,i=1;for(let t=1;t<=12;t++){const s=zbDateTimeTools.getDaysInMonth(e,t);if(!(r>s)){a=t,i=r;break}r-=s}return{year:e,month:a,day:i}}static getTimeToSeconds(t,e,r){return 60*t*60+60*e+r}static getSecondsToTime(t){const e=Math.floor(t/86400);t-=24*e*60*60;const r=Math.floor(t/3600);t-=60*r*60;const a=Math.floor(t/60);return{day:e,hour:r,minute:a,second:t-=60*a}}static _getLeapYearCount(t){return Math.floor(t/4)-Math.floor(t/100)+Math.floor(t/400)}}class zbFormatTools{static formatDate(t,e,r){zbFormatTools._formatDateRegex||(zbFormatTools._formatDateRegex=new RegExp("yyyy|yy|y|MMMM|MMM|MM|M|dddd|ddd|dd|d|r|R|/y|/M|/d|/r|/R|.","g"));const a=t.match(zbFormatTools._formatDateRegex),i=[];return a.forEach((function(t){switch(t){case"yyyy":i.push(r.year.toString());break;case"yy":i.push(r.year.toString().substr(2));break;case"y":{let t=r.year.toString().substr(2);"0"===t.charAt(0)&&(t=t.substr(1)),i.push(t);break}case"MMMM":i.push(e.monthList[r.month-1]);break;case"MMM":i.push(e.shortMonthList[r.month-1]);break;case"MM":{let t=r.month.toString();1===t.length&&(t="0"+t),i.push(t);break}case"M":i.push(r.month.toString());break;case"dddd":i.push(e.dayOfWeekList[r.getDayOfWeek()]);break;case"ddd":i.push(e.shortDayOfWeekList[r.getDayOfWeek()]);break;case"dd":{let t=r.day.toString();1===t.length&&(t="0"+t),i.push(t);break}case"d":i.push(r.day.toString());break;case"r":i.push(e.ordinalDayList[r.day-1]);break;case"R":i.push(e.ordinalDayList[r.day-1].toUpperCase());break;case"/y":case"/M":case"/d":case"/r":case"/R":i.push(t.substr(1));break;default:i.push(t)}})),i.join("")}static formatDateTime(t,e,r){zbFormatTools._formatDateTimeRegex||(zbFormatTools._formatDateTimeRegex=new RegExp("yyyy|yy|y|MMMM|MMM|MM|M|dddd|ddd|dd|d|r|R|hh|h|HH|H|mm|m|ss|s|t|T|/y|/M|/d|/r|/R|/h|/H|/m|/s|/t|/T|.","g"));const a=t.match(zbFormatTools._formatDateTimeRegex),i=[];return a.forEach((function(t){switch(t){case"yyyy":i.push(r.year.toString());break;case"yy":i.push(r.year.toString().substr(2));break;case"y":{let t=r.year.toString().substr(2);"0"===t.charAt(0)&&(t=t.substr(1)),i.push(t);break}case"MMMM":i.push(e.monthList[r.month-1]);break;case"MMM":i.push(e.shortMonthList[r.month-1]);break;case"MM":{let t=r.month.toString();1===t.length&&(t="0"+t),i.push(t);break}case"M":i.push(r.month.toString());break;case"dddd":i.push(e.dayOfWeekList[r.getDayOfWeek()]);break;case"ddd":i.push(e.shortDayOfWeekList[r.getDayOfWeek()]);break;case"dd":{let t=r.day.toString();1===t.length&&(t="0"+t),i.push(t);break}case"d":i.push(r.day.toString());break;case"r":i.push(e.ordinalDayList[r.day-1]);break;case"R":i.push(e.ordinalDayList[r.day-1].toUpperCase());break;case"hh":{let t=r.hour;t>12&&(t-=12);let e=t.toString();1===e.length&&(e="0"+e),i.push(e);break}case"h":{let t=r.hour;t>12&&(t-=12),i.push(t.toString());break}case"HH":{let t=r.hour.toString();1===t.length&&(t="0"+t),i.push(t);break}case"H":i.push(r.hour.toString());break;case"mm":{let t=r.minute.toString();1===t.length&&(t="0"+t),i.push(t);break}case"m":i.push(r.minute.toString());break;case"ss":{let t=r.second.toString();1===t.length&&(t="0"+t),i.push(t);break}case"s":i.push(r.second.toString());break;case"t":{let t=e.am;r.hour>12&&(t=e.pm),i.push(t);break}case"T":{let t=e.am;r.hour>12&&(t=e.pm),i.push(t.toUpperCase());break}case"/y":case"/M":case"/d":case"/r":case"/R":case"/h":case"/H":case"/m":case"/s":case"/t":case"/T":i.push(t.substr(1));break;default:i.push(t)}})),i.join("")}static formatTime(t,e,r){zbFormatTools._formatTimeRegex||(zbFormatTools._formatTimeRegex=new RegExp("hh|h|HH|H|mm|m|ss|s|t|T|/h|/H|/m|/s|/t|/T|.","g"));const a=t.match(zbFormatTools._formatTimeRegex),i=[];return a.forEach((function(t){switch(t){case"hh":{let t=r.hour;t>12&&(t-=12);let e=t.toString();1===e.length&&(e="0"+e),i.push(e);break}case"h":{let t=r.hour;t>12&&(t-=12),i.push(t.toString());break}case"HH":{let t=r.hour.toString();1===t.length&&(t="0"+t),i.push(t);break}case"H":i.push(r.hour.toString());break;case"mm":{let t=r.minute.toString();1===t.length&&(t="0"+t),i.push(t);break}case"m":i.push(r.minute.toString());break;case"ss":{let t=r.second.toString();1===t.length&&(t="0"+t),i.push(t);break}case"s":i.push(r.second.toString());break;case"t":{let t=e.am;r.hour>12&&(t=e.pm),i.push(t);break}case"T":{let t=e.am;r.hour>12&&(t=e.pm),i.push(t.toUpperCase());break}case"/h":case"/H":case"/m":case"/s":case"/t":case"/T":i.push(t.substr(1));break;default:i.push(t)}})),i.join("")}}const zbDayOfWeek={SUNDAY:0,MONDAY:1,TUESDAY:2,WEDNESDAY:3,THURSDAY:4,FRIDAY:5,SATURDAY:6};class zbValidate{static isNumber(t){if(void 0===t)throw new Error("Parameter is missing");if(null===t)throw new Error("Parameter is missing");if("number"!=typeof t)throw new Error("Parameter is not a number")}static isNumberInRange(t,e,r){if(void 0===t)throw new Error("Parameter is missing");if(null===t)throw new Error("Parameter is missing");if("number"!=typeof t)throw new Error("Parameter is not a number");if(t<e)throw new Error("Invalid parameter value");if(t>r)throw new Error("Invalid parameter value")}static isBoolean(t){if(void 0===t)throw new Error("Parameter is missing");if(null===t)throw new Error("Parameter is missing");if("boolean"!=typeof t)throw new Error("Parameter is not a boolean")}static isString(t){if(void 0===t)throw new Error("Parameter is missing");if(null===t)throw new Error("Parameter is missing");if("string"!=typeof t)throw new Error("Parameter is not a string")}static isStringInRange(t,e,r){if(void 0===t)throw new Error("Parameter is missing");if(null===t)throw new Error("Parameter is missing");if("string"!=typeof t)throw new Error("Parameter is not a string");if(t.length<e)throw new Error("Invalid parameter length");if(t.length>r)throw new Error("Invalid parameter length")}static isStringDigit(t){if(void 0===t)throw new Error("Parameter is missing");if(null===t)throw new Error("Parameter is missing");if("string"!=typeof t)throw new Error("Parameter is not a string");if(0===t.length)throw new Error("Parameter cannot be empty");for(let e=0;e<t.length;e++){const r=t.charAt(e);if(!(r>="0"&&r<="9"))throw new Error("Parameter is not a digit")}}static isArrayOfStringInRange(t,e,r){if(void 0===t)throw new Error("Parameter is missing");if(null===t)throw new Error("Parameter is missing");if(!1===Array.isArray(t))throw new Error("Parameter is not an array");if(t.length<e)throw new Error("Invalid parameter length");if(t.length>r)throw new Error("Invalid parameter length");for(let e=0;e<t.length;e++){const r=t[e];if(void 0===r)throw new Error("Parameter array item is missing");if(null===r)throw new Error("Parameter array item is missing");if("string"!=typeof r)throw new Error("Parameter array item is not a string")}}}class zbCulture{constructor(t,e,r,a,i,s,n,o,h,u,m,d,l,g,b){zbValidate.isStringInRange(t,1,10),zbValidate.isArrayOfStringInRange(e,12,12),zbValidate.isArrayOfStringInRange(r,12,12),zbValidate.isArrayOfStringInRange(a,7,7),zbValidate.isArrayOfStringInRange(i,7,7),zbValidate.isArrayOfStringInRange(s,31,31),zbValidate.isString(n),zbValidate.isString(o),zbValidate.isString(h),zbValidate.isString(u),zbValidate.isString(m),zbValidate.isString(d),zbValidate.isString(l),zbValidate.isString(g),zbValidate.isNumberInRange(b,0,6),this._code=t,this._monthList=e,this._shortMonthList=r,this._dayOfWeekList=a,this._shortDayOfWeekList=i,this._ordinalDayList=s,this._am=n,this._pm=o,this._longDateTime=h,this._shortDateTime=u,this._longDate=m,this._shortDate=d,this._longTime=l,this._shortTime=g,this._firstDayOfWeek=b}get code(){return this._code}get monthList(){return this._monthList}get shortMonthList(){return this._shortMonthList}get dayOfWeekList(){return this._dayOfWeekList}get shortDayOfWeekList(){return this._shortDayOfWeekList}get ordinalDayList(){return this._ordinalDayList}get am(){return this._am}get pm(){return this._pm}get longDateTime(){return this._longDateTime}get shortDateTime(){return this._shortDateTime}get longDate(){return this._longDate}get shortDate(){return this._shortDate}get longTime(){return this._longTime}get shortTime(){return this._shortTime}get firstDayOfWeek(){return this._firstDayOfWeek}static add(t){if(!(t instanceof zbCulture))throw new Error("Parameter is not a zbCulture object");zbCulture._cultureList||(zbCulture._cultureList=[]),zbCulture._cultureList.push(t)}static find(t){if(zbValidate.isStringInRange(t,1,10),!zbCulture._cultureList)return null;for(let e=0;e<zbCulture._cultureList.length;e++){const r=zbCulture._cultureList[e];if(r.code===t)return r}return null}static get default(){return zbCulture._defaultCulture||(zbCulture._defaultCulture=zbCulture.find("en-US")),zbCulture._defaultCulture}static set default(t){if(!(t instanceof zbCulture))throw new Error("Invalid parameter");zbCulture._defaultCulture=t}}zbCulture.add(new zbCulture("en-GB",["January","February","March","April","May","June","July","August","September","October","November","December"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["st","nd","rd","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","st","nd","rd","th","th","th","th","th","th","th","st"],"am","pm","dddd, d MMMM yyyy HH:mm","dd/MM/yyyy HH:mm","dddd, d MMMM yyyy","dd/MM/yyyy","HH:mm:ss","HH:mm",zbDayOfWeek.MONDAY)),zbCulture.add(new zbCulture("en-US",["January","February","March","April","May","June","July","August","September","October","November","December"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["st","nd","rd","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","th","st","nd","rd","th","th","th","th","th","th","th","st"],"am","pm","dddd, MMMM d yyyy h:mm t","MMMM d, yyyy h:mm t","dddd, MMMM d yyyy","MM/dd/yyyy","h:mm:ss t","h:mm t",zbDayOfWeek.MONDAY)),zbCulture.add(new zbCulture("es-ES",["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],["dom","lun","mar","mié","jue","vie","sáb"],["º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º","º"],"am","pm","dddd, d /de MMMM /de yyyy H:mm:ss","dd/MM/yyyy H:mm","dddd, d /de MMMM /de yyyy","dd/MM/yyyy","H:mm:ss","HH:mm",zbDayOfWeek.MONDAY)),zbCulture.add(new zbCulture("fr-FR",["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],["janv","févr","mars","avr","mai","juin","juil","août","sept","oct","nov","déc"],["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],["dim","lun","mar","mer","jeu","ven","sam"],["er","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"am","pm","dddd d MMMM yyyy HH:mm:ss","dd/MM/yyyy HH:mm","dddd d MMMM yyyy","dd/MM/yyyy","HH:mm:ss","HH:mm",zbDayOfWeek.MONDAY));class zbDate{constructor(t,e,r){if(zbValidate.isNumberInRange(t,1600,4e3),zbValidate.isNumberInRange(e,1,12),zbValidate.isNumberInRange(r,1,31),r>zbDateTimeTools.getDaysInMonth(t,e))throw new Error("Invalid date.");this._year=t,this._month=e,this._day=r}get year(){return this._year}get month(){return this._month}get day(){return this._day}toString(){let t=this._month.toString();1===t.length&&(t="0"+t);let e=this._day.toString();return 1===e.length&&(e="0"+e),this._year.toString()+"-"+t+"-"+e}getDayOfYear(){return zbDateTimeTools.getDayOfYear(this._year,this._month,this._day)}getDayOfWeek(){return zbDateTimeTools.getDayOfWeek(this._year,this._month,this._day)}addDays(t){zbValidate.isNumber(t);let e=zbDateTimeTools.getDateToDays(this._year,this._month,this._day);e+=t;const r=zbDateTimeTools.getDaysToDate(e);return r.year<1600||r.year>4e3?null:new zbDate(r.year,r.month,r.day)}addMonths(t){zbValidate.isNumber(t);let e=1;t<0&&(e=-1),t=Math.abs(t);const r=Math.floor(t/12),a=t%12;let i=this._year;if(0!==r){if(i=this._year+r*e,i<1600)return null;if(i>4e3)return null}let s=this._month+a*e;s<=0?(i--,s+=12):s>12&&(i++,s-=12);const n=zbDateTimeTools.getDaysInMonth(i,s);let o=this._day;return o>n&&(o=n),new zbDate(i,s,o)}addYears(t){zbValidate.isNumber(t);const e=this._year+t;if(e<1600)return null;if(e>4e3)return null;const r=this._month;let a=this._day;return 2===this._month&&29===this._day&&!1===zbDateTimeTools.isLeapYear(e)&&(a=28),new zbDate(e,r,a)}format(t,e){if(void 0!==e){if(!(e instanceof zbCulture))throw new Error("Invalid parameter")}else e=zbCulture.default;return void 0!==t?zbValidate.isString(t):t=e.longDate,zbFormatTools.formatDate(t,e,this)}static isLeapYear(t){return zbValidate.isNumberInRange(t,1600,4e3),zbDateTimeTools.isLeapYear(t)}static getDaysInMonth(t,e){return zbValidate.isNumberInRange(t,1600,4e3),zbValidate.isNumberInRange(e,1,12),zbDateTimeTools.getDaysInMonth(t,e)}static getDaysInYear(t){return zbValidate.isNumberInRange(t,1600,4e3),zbDateTimeTools.getDaysInYear(t)}static getToday(){const t=new Date;return new zbDate(t.getFullYear(),t.getMonth()+1,t.getDate())}static fromString(t){if(zbValidate.isStringInRange(t,10,10),"-"!==t.charAt(4))throw new Error("Invalid parameter");if("-"!==t.charAt(7))throw new Error("Invalid parameter");const e=t.substr(0,4),r=t.substr(5,2),a=t.substr(8,2);zbValidate.isStringDigit(e),zbValidate.isStringDigit(r),zbValidate.isStringDigit(a);const i=parseInt(e),s=parseInt(r),n=parseInt(a);return new zbDate(i,s,n)}static compare(t,e){if(!(t instanceof zbDate))throw new Error("Invalid parameter");if(!(e instanceof zbDate))throw new Error("Invalid parameter");return t.year<e.year?-1:t.year>e.year?1:t.month<e.month?-1:t.month>e.month?1:t.day<e.day?-1:t.day>e.day?1:0}}class zbDateTime{constructor(t,e,r,a,i,s){if(zbValidate.isNumberInRange(t,1600,4e3),zbValidate.isNumberInRange(e,1,12),zbValidate.isNumberInRange(r,1,31),zbValidate.isNumberInRange(a,0,23),zbValidate.isNumberInRange(i,0,59),zbValidate.isNumberInRange(s,0,59),r>zbDateTimeTools.getDaysInMonth(t,e))throw new Error("Invalid date.");this._year=t,this._month=e,this._day=r,this._hour=a,this._minute=i,this._second=s}get year(){return this._year}get month(){return this._month}get day(){return this._day}get hour(){return this._hour}get minute(){return this._minute}get second(){return this._second}toString(){let t=this._month.toString();1===t.length&&(t="0"+t);let e=this._day.toString();1===e.length&&(e="0"+e);let r=this._hour.toString();1===r.length&&(r="0"+r);let a=this._minute.toString();1===a.length&&(a="0"+a);let i=this._second.toString();return 1===i.length&&(i="0"+i),this._year.toString()+"-"+t+"-"+e+" "+r+":"+a+":"+i}getDayOfYear(){return zbDateTimeTools.getDayOfYear(this._year,this._month,this._day)}getDayOfWeek(){return zbDateTimeTools.getDayOfWeek(this._year,this._month,this._day)}addSeconds(t){zbValidate.isNumber(t);let e=zbDateTimeTools.getTimeToSeconds(this._hour,this._minute,this._second);e+=t;const r=zbDateTimeTools.getSecondsToTime(e);let a=new zbDateTime(this._year,this._month,this._day,r.hour,r.minute,r.second);return 0===r.day||(a=a.addDays(r.day)),a}addMinutes(t){zbValidate.isNumber(t);let e=zbDateTimeTools.getTimeToSeconds(this._hour,this._minute,this._second);e+=60*t;const r=zbDateTimeTools.getSecondsToTime(e);let a=new zbDateTime(this._year,this._month,this._day,r.hour,r.minute,r.second);return 0===r.day||(a=a.addDays(r.day)),a}addHours(t){zbValidate.isNumber(t);let e=zbDateTimeTools.getTimeToSeconds(this._hour,this._minute,this._second);e+=60*t*60;const r=zbDateTimeTools.getSecondsToTime(e);let a=new zbDateTime(this._year,this._month,this._day,r.hour,r.minute,r.second);return 0===r.day||(a=a.addDays(r.day)),a}addDays(t){zbValidate.isNumber(t);let e=zbDateTimeTools.getDateToDays(this._year,this._month,this._day);e+=t;const r=zbDateTimeTools.getDaysToDate(e);return r.year<1600||r.year>4e3?null:new zbDateTime(r.year,r.month,r.day,this._hour,this._minute,this._second)}addMonths(t){zbValidate.isNumber(t);let e=1;t<0&&(e=-1),t=Math.abs(t);const r=Math.floor(t/12),a=t%12;let i=this._year;if(0!==r){if(i=this._year+r*e,i<1600)return null;if(i>4e3)return null}let s=this._month+a*e;s<=0?(i--,s+=12):s>12&&(i++,s-=12);const n=zbDateTimeTools.getDaysInMonth(i,s);let o=this._day;return o>n&&(o=n),new zbDateTime(i,s,o,this._hour,this._minute,this._second)}addYears(t){zbValidate.isNumber(t);const e=this._year+t;if(e<1600)return null;if(e>4e3)return null;const r=this._month;let a=this._day;return 2===this._month&&29===this._day&&!1===zbDateTimeTools.isLeapYear(e)&&(a=28),new zbDateTime(e,r,a,this._hour,this._minute,this._second)}format(t,e){if(void 0!==e){if(!(e instanceof zbCulture))throw new Error("Invalid parameter")}else e=zbCulture.default;return void 0!==t?zbValidate.isString(t):t=e.longDateTime,zbFormatTools.formatDateTime(t,e,this)}static isLeapYear(t){return zbValidate.isNumberInRange(t,1600,4e3),zbDateTimeTools.isLeapYear(t)}static getDaysInMonth(t,e){return zbValidate.isNumberInRange(t,1600,4e3),zbValidate.isNumberInRange(e,1,12),zbDateTimeTools.getDaysInMonth(t,e)}static getDaysInYear(t){return zbValidate.isNumberInRange(t,1600,4e3),zbDateTimeTools.getDaysInYear(t)}static getNow(){const t=new Date;return new zbDateTime(t.getFullYear(),t.getMonth()+1,t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds())}static fromString(t){if(zbValidate.isStringInRange(t,19,19),"-"!==t.charAt(4))throw new Error("Invalid parameter");if("-"!==t.charAt(7))throw new Error("Invalid parameter");if(" "!==t.charAt(10))throw new Error("Invalid parameter");if(":"!==t.charAt(13))throw new Error("Invalid parameter");if(":"!==t.charAt(16))throw new Error("Invalid parameter");const e=t.substr(0,4),r=t.substr(5,2),a=t.substr(8,2),i=t.substr(11,2),s=t.substr(14,2),n=t.substr(17,2);zbValidate.isStringDigit(e),zbValidate.isStringDigit(r),zbValidate.isStringDigit(a),zbValidate.isStringDigit(i),zbValidate.isStringDigit(s),zbValidate.isStringDigit(n);const o=parseInt(e),h=parseInt(r),u=parseInt(a),m=parseInt(i),d=parseInt(s),l=parseInt(n);return new zbDateTime(o,h,u,m,d,l)}static compare(t,e){if(!(t instanceof zbDateTime))throw new Error("Invalid parameter");if(!(e instanceof zbDateTime))throw new Error("Invalid parameter");return t.year<e.year?-1:t.year>e.year?1:t.month<e.month?-1:t.month>e.month?1:t.day<e.day?-1:t.day>e.day?1:t.hour<e.hour?-1:t.hour>e.hour?1:t.minute<e.minute?-1:t.minute>e.minute?1:t.second<e.second?-1:t.second>e.second?1:0}}class zbTime{constructor(t,e,r){zbValidate.isNumberInRange(t,0,23),zbValidate.isNumberInRange(e,0,59),zbValidate.isNumberInRange(r,0,59),this._hour=t,this._minute=e,this._second=r}get hour(){return this._hour}get minute(){return this._minute}get second(){return this._second}toString(){let t=this._hour.toString();1===t.length&&(t="0"+t);let e=this._minute.toString();1===e.length&&(e="0"+e);let r=this._second.toString();return 1===r.length&&(r="0"+r),t+":"+e+":"+r}getTotalSeconds(){return zbDateTimeTools.getTimeToSeconds(this._hour,this._minute,this._second)}addSeconds(t){zbValidate.isNumber(t);let e=zbDateTimeTools.getTimeToSeconds(this._hour,this._minute,this._second);e+=t;const r=zbDateTimeTools.getSecondsToTime(e);return new zbTime(r.hour,r.minute,r.second)}addMinutes(t){zbValidate.isNumber(t);let e=zbDateTimeTools.getTimeToSeconds(this._hour,this._minute,this._second);e+=60*t;const r=zbDateTimeTools.getSecondsToTime(e);return new zbTime(r.hour,r.minute,r.second)}addHours(t){zbValidate.isNumber(t);let e=zbDateTimeTools.getTimeToSeconds(this._hour,this._minute,this._second);e+=60*t*60;const r=zbDateTimeTools.getSecondsToTime(e);return new zbTime(r.hour,r.minute,r.second)}format(t,e){if(void 0!==e){if(!(e instanceof zbCulture))throw new Error("Invalid parameter")}else e=zbCulture.default;return void 0!==t?zbValidate.isString(t):t=e.longTime,zbFormatTools.formatDateTime(t,e,this)}static getNow(){const t=new Date;return new zbTime(t.getHours(),t.getMinutes(),t.getSeconds())}static fromString(t){if(zbValidate.isStringInRange(t,8,8),":"!==t.charAt(2))throw new Error("Invalid parameter");if(":"!==t.charAt(5))throw new Error("Invalid parameter");const e=t.substr(0,2),r=t.substr(3,2),a=t.substr(6,2);zbValidate.isStringDigit(e),zbValidate.isStringDigit(r),zbValidate.isStringDigit(a);const i=parseInt(e),s=parseInt(r),n=parseInt(a);return new zbTime(i,s,n)}static compare(t,e){if(!(t instanceof zbTime))throw new Error("Invalid parameter");if(!(e instanceof zbTime))throw new Error("Invalid parameter");return t.hour<e.hour?-1:t.hour>e.hour?1:t.minute<e.minute?-1:t.minute>e.minute?1:t.second<e.second?-1:t.second>e.second?1:0}}class zbTimeSpan{constructor(t,e,r,a){if(zbValidate.isNumber(t),t<0)throw new Error("Invalid day");zbValidate.isNumberInRange(e,0,23),zbValidate.isNumberInRange(r,0,59),zbValidate.isNumberInRange(a,0,59),this._day=t,this._hour=e,this._minute=r,this._second=a}get day(){return this._day}get hour(){return this._hour}get minute(){return this._minute}get second(){return this._second}toString(){const t=this._day.toString();let e=this._hour.toString();1===e.length&&(e="0"+e);let r=this._minute.toString();1===r.length&&(r="0"+r);let a=this._second.toString();return 1===a.length&&(a="0"+a),t+" "+e+":"+r+":"+a}static getTimeSpan(t,e){const r=zbDateTimeTools.getDateToDays(t.year,t.month,t.day),a=zbDateTimeTools.getDateToDays(e.year,e.month,e.day);let i=zbDateTimeTools.getTimeToSeconds(t.hour,t.minute,t.second),s=zbDateTimeTools.getTimeToSeconds(e.hour,e.minute,e.second);let n=0,o=0;zbDateTime.compare(t,e)>0?(s>i&&(i+=86400),n=i-s,o=r-a):(i>s&&(s+=86400),n=s-i,o=a-r);const h=zbDateTimeTools.getSecondsToTime(n);return o+=h.day,new zbTimeSpan(o,h.hour,h.minute,h.second)}getTotalSeconds(){return 24*this._day*60*60+60*this._hour*60+60*this._minute+this._second}}